From a5146944c84d8255110f9525b7708f5c7d78c380 Mon Sep 17 00:00:00 2001
From: Francisco Boni <boboniboni@gmail.com>
Date: Mon, 23 Aug 2021 18:30:58 -0300
Subject: [PATCH] Open library file descriptors with O_CLOEXEC

---
 configure.ac  | 2 ++
 lib/connect.c | 2 +-
 lib/file.c    | 4 ++--
 lib/hostip.c  | 2 +-
 lib/hostip6.c | 2 +-
 lib/if2ip.c   | 2 +-
 6 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/configure.ac b/configure.ac
index 694a16cba..519aab662 100644
--- a/configure.ac
+++ b/configure.ac
@@ -297,6 +297,8 @@ AC_DEFINE_UNQUOTED(OS, "${host}", [cpu-machine-OS])
 # Silence warning: ar: 'u' modifier ignored since 'D' is the default
 AC_SUBST(AR_FLAGS, [cr])
 
+AC_USE_SYSTEM_EXTENSIONS
+
 dnl This defines _ALL_SOURCE for AIX
 CURL_CHECK_AIX_ALL_SOURCE
 
diff --git a/lib/connect.c b/lib/connect.c
index a6a062718..933c4944e 100644
--- a/lib/connect.c
+++ b/lib/connect.c
@@ -1599,7 +1599,7 @@ CURLcode Curl_socket(struct Curl_easy *data,
   }
   else
     /* opensocket callback not set, so simply create the socket now */
-    *sockfd = socket(addr->family, addr->socktype, addr->protocol);
+    *sockfd = socket(addr->family, addr->socktype | SOCK_CLOEXEC, addr->protocol);
 
   if(*sockfd == CURL_SOCKET_BAD)
     /* no socket, no connection */
diff --git a/lib/file.c b/lib/file.c
index 0420db345..3f4c0ac8a 100644
--- a/lib/file.c
+++ b/lib/file.c
@@ -194,7 +194,7 @@ static CURLcode file_connect(struct Curl_easy *data, bool *done)
     return CURLE_URL_MALFORMAT;
   }
 
-  fd = open_readonly(real_path, O_RDONLY);
+  fd = open_readonly(real_path, O_RDONLY|O_CLOEXEC);
   file->path = real_path;
 #endif
   file->freepath = real_path; /* free this when done */
@@ -278,7 +278,7 @@ static CURLcode file_upload(struct Curl_easy *data)
   else
     mode = MODE_DEFAULT|O_TRUNC;
 
-  fd = open(file->path, mode, data->set.new_file_perms);
+  fd = open(file->path, mode | O_CLOEXEC, data->set.new_file_perms);
   if(fd < 0) {
     failf(data, "Can't open %s for writing", file->path);
     return CURLE_WRITE_ERROR;
diff --git a/lib/hostip.c b/lib/hostip.c
index bb110dee5..4ecd4a866 100644
--- a/lib/hostip.c
+++ b/lib/hostip.c
@@ -550,7 +550,7 @@ bool Curl_ipv6works(struct Curl_easy *data)
   else {
     int ipv6_works = -1;
     /* probe to see if we have a working IPv6 stack */
-    curl_socket_t s = socket(PF_INET6, SOCK_DGRAM, 0);
+    curl_socket_t s = socket(PF_INET6, SOCK_DGRAM | SOCK_CLOEXEC, 0);
     if(s == CURL_SOCKET_BAD)
       /* an IPv6 address was requested but we can't get/use one */
       ipv6_works = 0;
diff --git a/lib/hostip6.c b/lib/hostip6.c
index e2777c73d..3e11c3e47 100644
--- a/lib/hostip6.c
+++ b/lib/hostip6.c
@@ -44,7 +44,7 @@
 #ifdef HAVE_PROCESS_H
 #include <process.h>
 #endif
-
+#include <fcntl.h>
 #include "urldata.h"
 #include "sendf.h"
 #include "hostip.h"
diff --git a/lib/if2ip.c b/lib/if2ip.c
index 21e00b1f1..14020bc0d 100644
--- a/lib/if2ip.c
+++ b/lib/if2ip.c
@@ -202,7 +202,7 @@ if2ip_result_t Curl_if2ip(int af, unsigned int remote_scope,
   if(len >= sizeof(req.ifr_name))
     return IF2IP_NOT_FOUND;
 
-  dummy = socket(AF_INET, SOCK_STREAM, 0);
+  dummy = socket(AF_INET, SOCK_STREAM | SOCK_CLOEXEC, 0);
   if(CURL_SOCKET_BAD == dummy)
     return IF2IP_NOT_FOUND;
 
-- 
2.32.0

