From a60b2572cb44028b635e18ca02201dac1b1fc4a1 Mon Sep 17 00:00:00 2001
From: insilications <boboniboni@gmail.com>
Date: Wed, 14 Oct 2020 19:34:00 -0300
Subject: [PATCH 4/4] Open library file descriptors with O_CLOEXEC

---
 configure.ac  | 2 ++
 lib/connect.c | 2 +-
 lib/file.c    | 4 ++--
 lib/hostip6.c | 3 ++-
 lib/if2ip.c   | 2 +-
 5 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/configure.ac b/configure.ac
index b028d4913..8bdcd6e4d 100755
--- a/configure.ac
+++ b/configure.ac
@@ -186,6 +186,8 @@ AC_DEFINE_UNQUOTED(OS, "${host}", [cpu-machine-OS])
 # Silence warning: ar: 'u' modifier ignored since 'D' is the default
 AC_SUBST(AR_FLAGS, [cr])
 
+AC_USE_SYSTEM_EXTENSIONS
+
 dnl This defines _ALL_SOURCE for AIX
 CURL_CHECK_AIX_ALL_SOURCE
 
diff --git a/lib/connect.c b/lib/connect.c
index 5f23b79ca..3c0c5b0b1 100644
--- a/lib/connect.c
+++ b/lib/connect.c
@@ -1534,7 +1534,7 @@ CURLcode Curl_socket(struct connectdata *conn,
   }
   else
     /* opensocket callback not set, so simply create the socket now */
-    *sockfd = socket(addr->family, addr->socktype, addr->protocol);
+    *sockfd = socket(addr->family, addr->socktype | SOCK_CLOEXEC, addr->protocol);
 
   if(*sockfd == CURL_SOCKET_BAD)
     /* no socket, no connection */
diff --git a/lib/file.c b/lib/file.c
index 1872dfef0..c9c2c1d75 100644
--- a/lib/file.c
+++ b/lib/file.c
@@ -190,7 +190,7 @@ static CURLcode file_connect(struct connectdata *conn, bool *done)
     return CURLE_URL_MALFORMAT;
   }
 
-  fd = open_readonly(real_path, O_RDONLY);
+  fd = open_readonly(real_path, O_RDONLY|O_CLOEXEC);
   file->path = real_path;
 #endif
   file->freepath = real_path; /* free this when done */
@@ -283,7 +283,7 @@ static CURLcode file_upload(struct connectdata *conn)
   else
     mode = MODE_DEFAULT|O_TRUNC;
 
-  fd = open(file->path, mode, conn->data->set.new_file_perms);
+  fd = open(file->path, mode | O_CLOEXEC, conn->data->set.new_file_perms);
   if(fd < 0) {
     failf(data, "Can't open %s for writing", file->path);
     return CURLE_WRITE_ERROR;
diff --git a/lib/hostip6.c b/lib/hostip6.c
index 11215758d..d1a3d38f1 100644
--- a/lib/hostip6.c
+++ b/lib/hostip6.c
@@ -45,6 +45,7 @@
 #include <process.h>
 #endif
 
+#include <fcntl.h>
 #include "urldata.h"
 #include "sendf.h"
 #include "hostip.h"
@@ -76,7 +77,7 @@ bool Curl_ipv6works(struct connectdata *conn)
   else {
     int ipv6_works = -1;
     /* probe to see if we have a working IPv6 stack */
-    curl_socket_t s = socket(PF_INET6, SOCK_DGRAM, 0);
+    curl_socket_t s = socket(PF_INET6, SOCK_DGRAM | SOCK_CLOEXEC, 0);
     if(s == CURL_SOCKET_BAD)
       /* an IPv6 address was requested but we can't get/use one */
       ipv6_works = 0;
diff --git a/lib/if2ip.c b/lib/if2ip.c
index 39388692e..a2f43b5fc 100644
--- a/lib/if2ip.c
+++ b/lib/if2ip.c
@@ -202,7 +202,7 @@ if2ip_result_t Curl_if2ip(int af, unsigned int remote_scope,
   if(len >= sizeof(req.ifr_name))
     return IF2IP_NOT_FOUND;
 
-  dummy = socket(AF_INET, SOCK_STREAM, 0);
+  dummy = socket(AF_INET, SOCK_STREAM | SOCK_CLOEXEC, 0);
   if(CURL_SOCKET_BAD == dummy)
     return IF2IP_NOT_FOUND;
 
-- 
2.28.0

